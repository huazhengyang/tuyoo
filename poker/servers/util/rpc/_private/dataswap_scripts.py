# -*- coding: utf-8 -*-
"""
Created on 2015-12-2
@author: zqh
"""
CHECK_USER_DATA_LUA_SCRIPT = '\nlocal userId = KEYS[1]\nlocal aliveTime = KEYS[2]\nlocal userkey = "user:" .. userId\nlocal createTime = redis.call("hget", userkey, "createTime")\nif (createTime == nil or createTime == false) then\n    return 0\nend\nif (string.len(""..createTime) < 20) then -- 2015-04-15 00:00:00.000\n    return 0\nend\nredis.call("hset", userkey, "aliveTime", aliveTime)\nreturn 1\n'
DATA_SWAP_LUA_SCRIPT = '\nlocal userId = KEYS[1]\nlocal aliveTime = KEYS[2]\nlocal datajstr = KEYS[3]\n\nlocal base64decode = function(data)\n    local b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"\n    data = string.gsub(data, "[^"..b.."=]", "")\n    return (data:gsub(".", function(x)\n        if (x == "=") then return "" end\n        local r,f="",(b:find(x)-1)\n        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and "1" or "0") end\n        return r;\n    end):gsub("%d%d%d?%d?%d?%d?%d?%d?", function(x)\n        if (#x ~= 8) then return "" end\n        local c=0\n        for i=1,8 do c=c+(x:sub(i,i)=="1" and 2^(8-i) or 0) end\n        return string.char(c)\n    end))\nend\n\nlocal decodedatas1 = function(line)\n    local step = (#line - 2) / 2\n    for x = 1, step, 1 do\n        local i = x * 2 + 2\n        line[i] = base64decode(line[i])\n    end\nend\n\nlocal decodedatas2 = function(line)\n    local step = (#line - 2)\n    for x = 1, step, 1 do\n        local i = x + 2\n        line[i] = base64decode(line[i])\n    end\nend\n\nlocal datas = cjson.decode(datajstr)\nlocal rkey = nil\nlocal rdata = nil\nlocal rcmds = {"lpush", "sadd", "zadd", "hmset", "set", "string"}\nfor rkey, rdata in pairs(datas) do\n    local isb64 = rdata[1]\n    local rcmdtype = rdata[2] -- 1 lpush 2 sadd 3 zadd 4 hmset 5 string\n    if (isb64 == 1) then\n        if rcmdtype == 2 or rcmdtype == 1 or rcmdtype == 5 then\n            decodedatas2(rdata)\n        elseif (rcmdtype == 4 or rcmdtype == 3) then\n            decodedatas1(rdata)\n        else\n            return {-1, 0, 0, 0, 0}\n        end\n    end\n    table.remove(rdata, 1)\n    table.remove(rdata, 1)\n    if (#rdata > 0 ) then\n        if (string.find(rkey, \'%%s\')) then\n            rkey = string.format(rkey, userId)\n        else\n            rkey = rkey .. userId\n        end\n        redis.call(rcmds[rcmdtype], rkey, unpack(rdata))\n    end\nend\nredis.call("hset", "user:" .. userId, "aliveTime", aliveTime)\nlocal chips = redis.call("hmget", "user:" .. userId, "chip", "diamond", "coin", "coupon")\nreturn {1, chips[1], chips[2], chips[3], chips[4]}\n'